// Generated by CoffeeScript 1.12.2
var Easing;

Easing = {
  Map: {},
  Linear: {},
  Quadratic: {},
  Cubic: {},
  Quartic: {},
  Quintic: {},
  Sinusoidal: {},
  Exponential: {},
  Circular: {},
  Elastic: {},
  Back: {},
  Bounce: {}
};

Easing.Linear.EaseNone = function(k) {
  return k;
};

Easing.Quadratic.EaseIn = function(k) {
  return k * k;
};

Easing.Quadratic.EaseOut = function(k) {
  return -k * (k - 2);
};

Easing.Quadratic.EaseInOut = function(k) {
  if ((k *= 2) < 1) {
    return 0.5 * k * k;
  }
  return -0.5 * (--k * (k - 2) - 1);
};

Easing.Cubic.EaseIn = function(k) {
  return k * k * k;
};

Easing.Cubic.EaseOut = function(k) {
  return --k * k * k + 1;
};

Easing.Cubic.EaseInOut = function(k) {
  if ((k *= 2) < 1) {
    return 0.5 * k * k * k;
  }
  return 0.5 * ((k -= 2) * k * k + 2);
};

Easing.Elastic.EaseIn = function(k) {
  var a, p, s;
  s = void 0;
  a = 0.1;
  p = 0.4;
  if (k === 0) {
    return 0;
  }
  if (k === 1) {
    return 1;
  }
  if (!p) {
    p = 0.3;
  }
  if (!a || a < 1) {
    a = 1;
    s = p / 4;
  } else {
    s = p / (2 * Math.PI) * Math.asin(1 / a);
  }
  return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * 2 * Math.PI / p));
};

Easing.Elastic.EaseOut = function(k) {
  var a, p, s;
  s = void 0;
  a = 0.1;
  p = 0.4;
  if (k === 0) {
    return 0;
  }
  if (k === 1) {
    return 1;
  }
  if (!p) {
    p = 0.3;
  }
  if (!a || a < 1) {
    a = 1;
    s = p / 4;
  } else {
    s = p / (2 * Math.PI) * Math.asin(1 / a);
  }
  return a * Math.pow(2, -10 * k) * Math.sin((k - s) * 2 * Math.PI / p) + 1;
};

Easing.Elastic.EaseInOut = function(k) {
  var a, p, s;
  s = void 0;
  a = 0.1;
  p = 0.4;
  if (k === 0) {
    return 0;
  }
  if (k === 1) {
    return 1;
  }
  if (!p) {
    p = 0.3;
  }
  if (!a || a < 1) {
    a = 1;
    s = p / 4;
  } else {
    s = p / (2 * Math.PI) * Math.asin(1 / a);
  }
  if ((k *= 2) < 1) {
    return -0.5 * a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * 2 * Math.PI / p);
  }
  return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * 2 * Math.PI / p) * 0.5 + 1;
};

Easing.Back.EaseIn = function(k) {
  var s;
  s = 1.70158;
  return k * k * ((s + 1) * k - s);
};

Easing.Back.EaseOut = function(k) {
  var s;
  s = 1.70158;
  return (k = k - 1) * k * ((s + 1) * k + s) + 1;
};

Easing.Back.EaseInOut = function(k) {
  var s;
  s = 1.70158 * 1.525;
  if ((k *= 2) < 1) {
    return 0.5 * k * k * ((s + 1) * k - s);
  }
  return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);
};

Easing.Bounce.EaseIn = function(k) {
  return 1 - Easing.Bounce.EaseOut(1 - k);
};

Easing.Bounce.EaseOut = function(k) {
  if ((k /= 1) < 1 / 2.75) {
    return 7.5625 * k * k;
  } else if (k < 2 / 2.75) {
    return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;
  } else if (k < 2.5 / 2.75) {
    return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;
  } else {
    return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;
  }
};

Easing.Bounce.EaseInOut = function(k) {
  if (k < 0.5) {
    return Easing.Bounce.EaseIn(k * 2) * 0.5;
  }
  return Easing.Bounce.EaseOut(k * 2 - 1) * 0.5 + 0.5;
};

Easing.toString = function(f) {
  var name;
  for (name in Easing.Map) {
    if (Easing.Map[name] === f) {
      return name;
    }
  }
};

Easing.strToEasing = function(name) {
  return Easing.Map[name];
};

module.exports = Easing;

//# sourceMappingURL=easing.js.map
